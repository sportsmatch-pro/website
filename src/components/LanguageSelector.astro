---
// Props per a l'idioma actual
export interface Props {
  currentLang?: string;
  currentSlug?: string; // Afegir slug de l'article actual
}

const { currentLang = "es-ES", currentSlug } = Astro.props;

// Mapeig d'idiomes per a les URLs
const langMap = {
  "es-ES": { code: "es", name: "ES", path: "", label: "Español" },
  "ca-ES": { code: "ca", name: "CA", path: "/ca", label: "Català" },
  en: { code: "en", name: "EN", path: "/en", label: "English" },
};

// Obtenir l'idioma actual
const currentLangInfo =
  langMap[currentLang as keyof typeof langMap] || langMap["es-ES"];

// Si estem en un article, obtenir els idiomes disponibles
let availableLanguages: string[] = [];
if (currentSlug) {
  // Cridar l'API per obtenir tots els articles i trobar els disponibles per a aquest slug
  try {
    const res = await fetch(import.meta.env.API_BASE_URL + "articles");
    const articles = await res.json();

    // Trobar articles amb el mateix slug
    const articlesWithSameSlug = articles.filter(
      (article: any) => article.slug === currentSlug
    );
    availableLanguages = articlesWithSameSlug.map(
      (article: any) => article.language
    );
  } catch (error) {
    console.error("Error fetching articles for language detection:", error);
    // Si hi ha error, mostrar tots els idiomes
    availableLanguages = Object.keys(langMap);
  }
} else {
  // Si no estem en un article, mostrar tots els idiomes
  availableLanguages = Object.keys(langMap);
}
---

<select
  class="border rounded-full px-4 py-1"
  id="language-selector"
  data-current-lang={currentLang}
  data-current-slug={currentSlug}
>
  {
    Object.entries(langMap).map(([key, lang]) => {
      const isAvailable = availableLanguages.includes(key);
      const isCurrent = key === currentLang;

      return (
        <option
          value={lang.path}
          selected={isCurrent}
          disabled={!isAvailable}
          class={!isAvailable ? "text-gray-400" : ""}
        >
          {lang.name} {!isAvailable ? "(No disponible)" : ""}
        </option>
      );
    })
  }
</select>

<script>
  // Funcionalitat del selector d'idioma
  const languageSelector = document.getElementById(
    "language-selector"
  ) as HTMLSelectElement;
  const currentSlug = languageSelector?.dataset.currentSlug;

  if (languageSelector) {
    languageSelector.addEventListener("change", (e) => {
      const target = e.target as HTMLSelectElement;
      const newPath = target.value;

      // Obtenir la ruta actual
      const currentPath = window.location.pathname;

      // Separar la ruta en segments
      const segments = currentPath.split("/").filter((segment) => segment);

      // Si la ruta comença amb idioma, l'eliminem
      if (segments[0] === "ca" || segments[0] === "en") {
        segments.shift();
      }

      // Construir la nova ruta
      let newUrl;
      if (newPath) {
        // Afegir el nou idioma al principi
        newUrl = newPath + "/" + segments.join("/");
      } else {
        // Sense idioma (espanyol)
        newUrl = "/" + segments.join("/");
      }

      // Assegurar-nos que comença amb /
      if (!newUrl.startsWith("/")) {
        newUrl = "/" + newUrl;
      }

      // Redirigir
      window.location.href = newUrl;
    });
  }
</script>
